//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
flec_class PostCode

   vector<string> possible_names

   /\/ uNSORTED /\/

      addName(const string& thestr);

   
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
flec_class SA1Data
   
   vector<short> pops; // populations on the sa1s
   int malecount
   int femalecount
   
   // incomes too
   // but wait, hmm
   
   float youth_factor

   /\/ uNSORTED /\/

      // agedPop(int agenum);
      agedPop(int agenum) -> int;

   
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
flec_class SA2Data
   
   float walkers_count
   float cyclers_count
   
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
flec_class MeshBlock
   
   uint64_t code16; // 8 bytes
   
   // why not
   
   eostri reclass // 4 bytes
      // com / edu / medi / indus / infra / other 
      // park / primprod / resi / trans / water
      
   bool ispublic
   bool isprivate
   
   float area
   float grass_perc
   float shrub_perc
   float anytree_perc
   
   float smalltree_perc
   float midtree_perc
   float bigtree_perc
   float nonveg_perc
   
   uint32_t sa1_code;
   uint32_t sa2_code;
   uint32_t sa3_code;
   int32_t postcode; // to get names and all
   
   uint32_t pop_2016;
   uint32_t dwellings_2016;
   //uint32_t pop_2011;
   
   float uhi_index;
   
   // to add:
   // population
   // urban heat
   // sex ratio
   // age ratio
   
   
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
class MBHost
   
   map<string, uint32_t> sa2_names;
   
   map<string, string> attribs
      // get shringers of these
   
   map<uint32_t, SA1Data> sadatas;
   map<uint32_t, SA2Data> satwos;
   map<uint32_t, PostCode> postcodes
   map<uint64_t, MeshBlock> meshblocks

   /\/ uNSORTED /\/

      MBHost();
      loadRaw();
      saveFile(const string& thefile);
      loadFile(const string& thefile);
      ob(uint64_t theindex) -> MeshBlock&;

   
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
